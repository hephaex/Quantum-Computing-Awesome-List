# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class Qubit(google___protobuf___message___Message):
    row = ... # type: int
    col = ... # type: int

    def __init__(self,
        row : typing___Optional[int] = None,
        col : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Qubit: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"col",u"row"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"col",b"row"]) -> None: ...

class ParameterizedFloat(google___protobuf___message___Message):
    raw = ... # type: float
    parameter_key = ... # type: typing___Text

    def __init__(self,
        raw : typing___Optional[float] = None,
        parameter_key : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ParameterizedFloat: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"parameter_key",u"raw",u"value"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"parameter_key",u"raw",u"value"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"parameter_key",b"parameter_key",u"raw",b"raw",u"value",b"value"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"parameter_key",b"raw",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"value",b"value"]) -> typing_extensions___Literal["raw","parameter_key"]: ...

class ExpW(google___protobuf___message___Message):

    @property
    def target(self) -> Qubit: ...

    @property
    def axis_half_turns(self) -> ParameterizedFloat: ...

    @property
    def half_turns(self) -> ParameterizedFloat: ...

    def __init__(self,
        target : typing___Optional[Qubit] = None,
        axis_half_turns : typing___Optional[ParameterizedFloat] = None,
        half_turns : typing___Optional[ParameterizedFloat] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ExpW: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"axis_half_turns",u"half_turns",u"target"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"axis_half_turns",u"half_turns",u"target"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"axis_half_turns",b"axis_half_turns",u"half_turns",b"half_turns",u"target",b"target"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"axis_half_turns",b"half_turns",b"target"]) -> None: ...

class ExpZ(google___protobuf___message___Message):

    @property
    def target(self) -> Qubit: ...

    @property
    def half_turns(self) -> ParameterizedFloat: ...

    def __init__(self,
        target : typing___Optional[Qubit] = None,
        half_turns : typing___Optional[ParameterizedFloat] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ExpZ: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"half_turns",u"target"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"half_turns",u"target"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"half_turns",b"half_turns",u"target",b"target"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"half_turns",b"target"]) -> None: ...

class Exp11(google___protobuf___message___Message):

    @property
    def target1(self) -> Qubit: ...

    @property
    def target2(self) -> Qubit: ...

    @property
    def half_turns(self) -> ParameterizedFloat: ...

    def __init__(self,
        target1 : typing___Optional[Qubit] = None,
        target2 : typing___Optional[Qubit] = None,
        half_turns : typing___Optional[ParameterizedFloat] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Exp11: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"half_turns",u"target1",u"target2"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"half_turns",u"target1",u"target2"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"half_turns",b"half_turns",u"target1",b"target1",u"target2",b"target2"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"half_turns",b"target1",b"target2"]) -> None: ...

class Measurement(google___protobuf___message___Message):
    key = ... # type: typing___Text
    invert_mask = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[bool]

    @property
    def targets(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[Qubit]: ...

    def __init__(self,
        targets : typing___Optional[typing___Iterable[Qubit]] = None,
        key : typing___Optional[typing___Text] = None,
        invert_mask : typing___Optional[typing___Iterable[bool]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Measurement: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"invert_mask",u"key",u"targets"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"invert_mask",b"key",b"targets"]) -> None: ...

class Operation(google___protobuf___message___Message):
    incremental_delay_picoseconds = ... # type: int

    @property
    def exp_w(self) -> ExpW: ...

    @property
    def exp_z(self) -> ExpZ: ...

    @property
    def exp_11(self) -> Exp11: ...

    @property
    def measurement(self) -> Measurement: ...

    def __init__(self,
        incremental_delay_picoseconds : typing___Optional[int] = None,
        exp_w : typing___Optional[ExpW] = None,
        exp_z : typing___Optional[ExpZ] = None,
        exp_11 : typing___Optional[Exp11] = None,
        measurement : typing___Optional[Measurement] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Operation: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"exp_11",u"exp_w",u"exp_z",u"measurement",u"operation"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"exp_11",u"exp_w",u"exp_z",u"incremental_delay_picoseconds",u"measurement",u"operation"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"exp_11",b"exp_11",u"exp_w",b"exp_w",u"exp_z",b"exp_z",u"measurement",b"measurement",u"operation",b"operation"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"exp_11",b"exp_w",b"exp_z",b"incremental_delay_picoseconds",b"measurement",b"operation"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"operation",b"operation"]) -> typing_extensions___Literal["exp_w","exp_z","exp_11","measurement"]: ...
