# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class MetricsSnapshot(google___protobuf___message___Message):
    timestamp_ms = ... # type: int

    @property
    def metrics(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[Metric]: ...

    def __init__(self,
        timestamp_ms : typing___Optional[int] = None,
        metrics : typing___Optional[typing___Iterable[Metric]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> MetricsSnapshot: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"metrics",u"timestamp_ms"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"metrics",b"timestamp_ms"]) -> None: ...

class Metric(google___protobuf___message___Message):
    name = ... # type: typing___Text
    targets = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]

    @property
    def values(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[Value]: ...

    def __init__(self,
        name : typing___Optional[typing___Text] = None,
        targets : typing___Optional[typing___Iterable[typing___Text]] = None,
        values : typing___Optional[typing___Iterable[Value]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Metric: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"name",u"targets",u"values"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"name",b"targets",b"values"]) -> None: ...

class Value(google___protobuf___message___Message):
    double_val = ... # type: float
    int32_val = ... # type: int
    int64_val = ... # type: int
    str_val = ... # type: typing___Text

    def __init__(self,
        double_val : typing___Optional[float] = None,
        int32_val : typing___Optional[int] = None,
        int64_val : typing___Optional[int] = None,
        str_val : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Value: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"double_val",u"int32_val",u"int64_val",u"str_val",u"val"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"double_val",u"int32_val",u"int64_val",u"str_val",u"val"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"double_val",b"double_val",u"int32_val",b"int32_val",u"int64_val",b"int64_val",u"str_val",b"str_val",u"val",b"val"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"double_val",b"int32_val",b"int64_val",b"str_val",b"val"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"val",b"val"]) -> typing_extensions___Literal["double_val","int32_val","int64_val","str_val"]: ...
